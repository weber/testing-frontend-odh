/*
    Инструменты, полезные миксины, функции…
*/

@mixin fontsize($size:1.6, $line: $size * 1.5){
    font-size:   ($size * $baseFontSize);
    line-height: ($line * $baseFontSize);
    font-size:   $size + rem;
    line-height: $line + rem;
}

@mixin lineheight($line){
    line-height: ($line * $baseFontSize);
    line-height: $line + rem;
}

/**
Центровка блока
*/

// .parent {
//   position: relative;
// }
// .child {
//   @include centerer;
// }

@mixin centerer {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/**
БЭМ
*/
// .block {
//    /* CSS declarations for `.block` */
//    @include e('element') {
//    /* CSS declarations for `.block__element` */
//    }
//    @include m('modifier') {
//    /* CSS declarations for `.block--modifier` */
//        @include e('element') {
//        /* CSS declarations for `.block--modifier__element` */
//        }
//    }
// }
//
/// Block Element
/// @access public
/// @param {String} $element - Element's name
@mixin element($element) {
    &__#{$element} {
        @content;
    }
}

/// Block Modifier
/// @access public
/// @param {String} $modifier - Modifier's name
@mixin modifier($modifier) {
    &--#{$modifier} {
        @content;
    }
}
/// @alias element
@mixin e($element) {
    @include element($element)  {
        @content;
    }
}
/// @alias modifier
@mixin m($modifier) {
    @include modifier($modifier) {
        @content;
    }
}

/*
html {
  @include fluid-type(font-size, 320px, 1366px, 14px, 18px);
}

Multiple properties with same values
h1 {
    @include fluid-type(padding-bottom padding-top, 20em, 70em, 2em, 4em);
}
*/
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
    & {
        @each $property in $properties {
            #{$property}: $min-value;
        }

        @media screen and (min-width: $min-vw) {
            @each $property in $properties {
                #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
            }
        }

        @media screen and (min-width: $max-vw) {
            @each $property in $properties {
                #{$property}: $max-value;
            }
        }
    }
}

@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
}